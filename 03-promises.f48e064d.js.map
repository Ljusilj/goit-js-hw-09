{"mappings":"AAEA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAASC,GAClEA,EAAMC,iBAEN,MAAMC,EAAaC,SAASN,SAASC,cAAc,uBAAuBM,OACpEC,EAAYF,SAASN,SAASC,cAAc,sBAAsBM,OAClEE,EAAcH,SAASN,SAASC,cAAc,wBAAwBM,OAEtEG,EAAW,GAEjB,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAG,EAAG,CACtC,MAAMC,EAAeP,GAAcM,EAAI,GAAKH,EAC5CE,EAASG,KAAKvB,EAAcqB,EAAGC,G,CAGjCnB,QAAQqB,WAAWJ,GAAUK,MAAKC,IAChCA,EAAQC,SAAQC,IACQ,cAAlBA,EAAOC,OACTC,QAAQC,IAAI,uBAAqBH,EAAIX,MAAOhB,eAAmB2B,EAAEX,MAAOf,WAEtE4B,QAAMC,IAAI,sBAAoBH,EAAEI,OAAO/B,eAAoB2B,EAAEI,OAAO9B,UAAe,GAEvF,G","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function(event) {\n  event.preventDefault();\n\n  const delayInput = parseInt(document.querySelector('input[name=\"delay\"]').value);\n  const stepInput = parseInt(document.querySelector('input[name=\"step\"]').value);\n  const amountInput = parseInt(document.querySelector('input[name=\"amount\"]').value);\n\n  const promises = [];\n\n  for (let i = 1; i <= amountInput; i+=1) {\n    const currentDelay = delayInput + (i - 1) * stepInput;\n    promises.push(createPromise(i, currentDelay));\n  }\n\n  Promise.allSettled(promises).then(results => {\n    results.forEach(result => {\n      if (result.status === 'fulfilled') {\n        console.log(`✅ Fulfilled promise ${result.value.position} in ${result.value.delay}ms`);\n      } else {\n        console.log(`❌ Rejected promise ${result.reason.position} in ${result.reason.delay}ms`);\n      }\n    });\n  });\n});\n\n\n\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","parseInt","value","stepInput","amountInput","promises","i","currentDelay","push","allSettled","then","results","forEach","result","status","console","log","reason"],"version":3,"file":"03-promises.f48e064d.js.map"}